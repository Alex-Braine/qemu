name: Windows

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+-win-cygwin" 

jobs:
  build:
    runs-on: windows-2019
    defaults:
      run:
        shell: C:\tools\cygwin\bin\bash.exe --login -o igncr '{0}'
    strategy:
      matrix:
        arch: [x86_64]
        platform: [windows]
    steps:
      - name: Branch name
        id: branch_name
        shell: bash
        run: |
          echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}

      - name: Msgmerge fix
        shell: pwsh 
        run: |
          Remove-Item "C:\Program Files\Git\usr\bin\msgmerge.exe"

      - name: Set up Cygwin
        uses: egor-tensin/setup-cygwin@v3
        with:
          platform: x64
          packages: wget

      - name: Install apt-cyg 
        run: |
          gcc -xc -E -v -
          gcc -xc++ -E -v -
          echo '----------'
          ls -l /
          ls -l /bin/
          echo '----------'
          ls -l /lib/
          echo '----------'
          ls -l /var/
          echo '----------'
          ls -l /usr
          echo '----------' 
          ls -l /usr/lib
          echo '----------'
          find /  -type d -name "x86_64-w64-mingw32"
          wget rawgit.com/transcode-open/apt-cyg/master/apt-cyg -O apt-cyg
          install apt-cyg /bin

      - name: Install libs
        run: |
          apt-cyg install libffi-devel libpcre1 pcre gcc-core binutils cmake gcc-g++ automake autoconf libtool python  bison coreutils libiconv libiconv-devel gettext ncurses ninja byacc libncurses-devel lynx gettext-devel libreadline-devel wget libxml2-devel file-devel libtirpc-devel libjansson-devel pcre2 libpcre2-devel meson zlib-devel libpixman1-devel
          
          export PKG_CONFIG_PATH=$(pkg-config --variable pc_path pkg-config):/usr/local/lib/pkgconfig
      
      - name: Install glib2
        run: |
          echo $PKG_CONFIG_PATH
          wget https://download.gnome.org/sources/glib/2.71/glib-2.71.1.tar.xz
          tar -xf glib-2.71.1.tar.xz
          cd glib-2.71.1
          meson _build -Dtests=false       
          ninja -C _build
          ninja -C _build install

      - name: Build
        run: |
          echo "#ifndef __linux__" >> /usr/include/stdio.h
          echo "#define __linux__" >> /usr/include/stdio.h
          tail -c100 /usr/include/stdio.h
          git clone https://github.com/kymano-app/qemu.git
          cd qemu
          BUILD_PATH=$HOME/QEMU-bin
          mkdir $HOME/QEMU-bin
          mkdir bin
          git clone git://git.qemu-project.org/qemu.git
          cd qemu
          git reset --hard 44f28df24767cf9dca1ddc9b23157737c4cbb645
          #patch configure ../qemu-cygwin/configure.patch
          git submodule init
          git submodule update --recursive
          ./configure --prefix=$BUILD_PATH --target-list=x86_64-softmmu --disable-capstone --disable-werror
          echo 'make'
          make
          echo 'make ok'
          make install
          echo 'make install ok'
          cd ../
          cp /bin/*.dll bin/
          mv $BUILD_PATH/share .
          mv $BUILD_PATH/*.exe bin/
      
      - name: Compress
        run: |
          tar -czvf "qemu-${{ steps.branch_name.outputs.TAG }}-windows-cygwin-x86_64.tgz" bin share
      
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.tgz
          prerelease: true
