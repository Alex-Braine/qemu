name: Macos

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+-cocoa"
      - "[0-9]+.[0-9]+.[0-9]+-gtk3"

jobs:
  build-macos-ports:
    name: Build0
    runs-on: macos-11
    strategy:
      matrix:
        arch: [x86_64]
        platform: [macos]
    steps:
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=QEMU_VERSION::$(echo ${GITHUB_REF#refs/tags/} | cut -d - -f 1) && \
          echo ::set-output name=TAG::${GITHUB_REF#refs/tags/} && \
          case `echo ${GITHUB_REF#refs/tags/} | cut -d - -f 2` in 'cocoa') echo ::set-output name=VARIANT::$(echo '+cocoa');; 'gtk3') echo ::set-output name=VARIANT::$(echo '+gtk3 +sdl2');; esac

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.P12 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Macports 0
        run: |
           wget https://github.com/macports/macports-base/releases/download/v2.7.1/MacPorts-2.7.1-11-BigSur.pkg
           sudo installer -pkg ./MacPorts-2.7.1-11-BigSur.pkg -target /

      - name: Install dependencies
        run: |
          sudo chown runner /opt/local/etc/macports/macports.conf 
          sudo echo 'build_arch ${{ matrix.arch }}' >> /opt/local/etc/macports/macports.conf
          export PATH="/opt/local/bin:$PATH"
          sudo port install qemu @${{ steps.branch_name.outputs.QEMU_VERSION }} +curses ${{ steps.branch_name.outputs.VARIANT }}
          mkdir bin
          cp /opt/local/bin/qemu-system-x86_64 bin/
          cp /opt/local/bin/qemu-system-aarch64 bin/
          cp /opt/local/bin/qemu-img bin/
          mkdir -p share
          ls -l /opt/local/share/ 
          echo ':::::::::::::::::'
          sudo chown -R runner /opt/local/share/qemu
          cp -r /opt/local/share/qemu share/
          #ls -l /usr/local/share/qemu
          echo '#################'
          #p=/usr/local/share && find $p/qemu | while read f ; do echo $f; true | cp -L $f share/qemu; done
          echo '@@@@@@@@@@@@@@@@@@@'
          chmod +x scripts/fix_mac.sh
          scripts/fix_mac.sh
      
      - name: Compress
        run: |
          tar -czvf `echo "qemu-${{ steps.branch_name.outputs.TAG }}-${{ matrix.platform }}-${{ matrix.arch }}.tgz" | sed 's/ //g'` libs bin share

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.tgz
          prerelease: true