name: Publish

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-linux-dnf:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
        platform: [linux]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: setup-qemu-action
        uses: docker/setup-qemu-action@v1

      - name: Install dependencies
        run: |
          docker run --entrypoint /bin/sh --name qemu --platform linux/${{ matrix.arch }} fedora:36 -c "dnf update -y && \
          dnf install -y findutils patchelf qemu && \
          cd /root/ && \
          curl -OL https://raw.githubusercontent.com/kymano-app/remote-viewer/master/fix_linux.sh && \
          bash fix_linux.sh ${{ matrix.arch }} && \
          mkdir bin && \
          cp /usr/bin/qemu-img bin/ && \
          cp /usr/bin/qemu-system-x86_64 bin/ && \
          cp /usr/bin/qemu-system-aarch64 bin/ && \
          mkdir share && \
          ls -l /usr/share/ipxe && \
          find /usr/share/ipxe && \
          p=/usr/share; for file in `find $p/ipxe $p/seabios $p/seavgabios $p/sgabios $p/qemu`; do true | echo $file; done && \
          p=/usr/share; for file in `find $p/ipxe $p/seabios $p/seavgabios $p/sgabios $p/qemu`; do true | cp -L $file share/; done && \
          tar -czvf qemu-${{ matrix.platform }}-${{ matrix.arch }}.tgz libs bin share"

          sudo docker cp qemu:/root/qemu-${{ matrix.platform }}-${{ matrix.arch }}.tgz .

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            *.tgz
          prerelease: true

  build-macos-ports:
    if: false
    name: Build0
    runs-on: macos-11
    strategy:
      matrix:
        arch: [amd64]
        platform: [macos]
        variants: ['+cocoa', '+gtk3 +sdl2']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.P12 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Macports 0
        run: |
           wget https://github.com/macports/macports-base/releases/download/v2.7.1/MacPorts-2.7.1-11-BigSur.pkg
           sudo installer -pkg ./MacPorts-2.7.1-11-BigSur.pkg -target /

      - name: Install dependencies
        run: |
          export PATH="/opt/local/bin:$PATH" 

          sudo port install qemu +curses +usb +curl +vnc +vde +lzo +lzfse +snappy +zstd +ssh ${{ matrix.variants }}
          mkdir bin
          cp /opt/local/bin/qemu-system-x86_64 bin/
          cp /opt/local/bin/qemu-system-aarch64 bin/
          cp /opt/local/bin/qemu-img bin/

          chmod +x scripts/fix_mac.sh
          scripts/fix_mac.sh
      
      - name: Compress
        run: |
          tar -czvf `echo "qemu-6.2-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.variants }}.tgz" | sed 's/ //g'` libs bin

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            *.tgz
          prerelease: true

  build-qemu-macos:
    if: false
    name: Build Qemu macos
    runs-on: macos-11
    strategy:
      matrix:
        arch: [arm64]
        platform: [macos]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup Xcode
        shell: bash
        run: sudo xcode-select -switch /Applications/Xcode_13.1.app
      - name: Cache Sysroot
        id: cache-sysroot
        uses: actions/cache@v2
        with:
          path: sysroot-${{ matrix.platform }}-${{ matrix.arch }}
          key: ${{ matrix.platform }}-${{ matrix.arch }}-${{ hashFiles('scripts/build_dependencies.sh') }}-${{ hashFiles('patches/**') }}
      - name: Setup Path
        shell: bash
        run: |
          echo "/usr/local/opt/gettext/bin" >> $GITHUB_PATH
          echo "/usr/local/opt/bison/bin" >> $GITHUB_PATH
      - name: Macports 0
        if: steps.cache-sysroot.outputs.cache-hit != 'true'
        run: |
          # wget https://github.com/macports/macports-base/releases/download/v2.7.1/MacPorts-2.7.1-11-BigSur.pkg
          # sudo installer -pkg ./MacPorts-2.7.1-11-BigSur.pkg -target / 
          sudo mkdir /opt/local/
          sudo mkdir /opt/local/lib
          sudo chmod -R 0777 /opt/
          sudo chown -R runner /opt/
          ls -lta /opt/
          id -un

      - name: Macports 1
        if: steps.cache-sysroot.outputs.cache-hit != 'true'
        run: |
          # sudo chmod 0777 /opt/local/etc/macports/macports.conf
          # echo 'build_arch arm64' >> /opt/local/etc/macports/macports.conf
          #  echo 'universal_archs arm64 x86_64' >> /opt/local/etc/macports/macports.conf
          # tail -c500 /opt/local/etc/macports/macports.conf
          # sudo /opt/local/bin/port -v selfupdate
          wget https://packages.macports.org/libusb/libusb-1.0.24_0.darwin_20.arm64.tbz2
          tar -xzf libusb-1.0.24_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/libffi/libffi-3.4.2_2+universal.darwin_20.arm64-x86_64.tbz2
          tar -xzf libffi-3.4.2_2+universal.darwin_20.arm64-x86_64.tbz2
          wget https://packages.macports.org/libgpg-error/libgpg-error-1.43_1.darwin_20.arm64.tbz2
          tar -xzf libgpg-error-1.43_1.darwin_20.arm64.tbz2
          wget https://packages.macports.org/libgcrypt/libgcrypt-1.9.4_0.darwin_20.arm64.tbz2
          tar -xzf libgcrypt-1.9.4_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/libopus/libopus-1.3.1_0.darwin_20.arm64.tbz2
          tar -xzf libopus-1.3.1_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/at-spi2-atk/at-spi2-atk-2.38.0_0.darwin_20.arm64.tbz2
          tar -xzf at-spi2-atk-2.38.0_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/at-spi2-core/at-spi2-core-2.38.0_0.darwin_20.arm64.tbz2
          tar -xzf at-spi2-core-2.38.0_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/dbus/dbus-1.12.20_0.darwin_20.arm64.tbz2
          tar -xzf dbus-1.12.20_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/expat/expat-2.4.2_0.darwin_20.arm64.tbz2
          tar -xzf expat-2.4.2_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/glib2/glib2-2.62.6_2+x11.darwin_20.arm64.tbz2
          tar -xzf glib2-2.62.6_2+x11.darwin_20.arm64.tbz2
          wget https://packages.macports.org/gettext/gettext-0.21_0.darwin_20.arm64.tbz2
          tar -xzf gettext-0.21_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/gettext-runtime/gettext-runtime-0.21_0.darwin_20.arm64.tbz2
          tar -xzf gettext-runtime-0.21_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/libiconv/libiconv-1.16_1.darwin_20.arm64.tbz2
          tar -xzf libiconv-1.16_1.darwin_20.arm64.tbz2
          echo 'prefix=/opt/local' >> opt/local/lib/pkgconfig/iconv.pc
          echo 'exec_prefix=${prefix}' >> opt/local/lib/pkgconfig/iconv.pc
          echo 'libdir=${exec_prefix}/lib' >> opt/local/lib/pkgconfig/iconv.pc
          echo 'includedir=${prefix}/include' >> opt/local/lib/pkgconfig/iconv.pc
          echo '' >> opt/local/lib/pkgconfig/iconv.pc
          echo 'Name: iconv' >> opt/local/lib/pkgconfig/iconv.pc
          echo 'Description: iconv' >> opt/local/lib/pkgconfig/iconv.pc
          echo 'Version: 1.16.1' >> opt/local/lib/pkgconfig/iconv.pc
          echo 'Cflags: -I${includedir}' >> opt/local/lib/pkgconfig/iconv.pc
          echo 'Libs: -L${libdir} -liconv' >> opt/local/lib/pkgconfig/iconv.pc

          wget https://packages.macports.org/gettext-tools-libs/gettext-tools-libs-0.21_0.darwin_20.arm64.tbz2
          tar -xzf gettext-tools-libs-0.21_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/libtextstyle/libtextstyle-0.21_0.darwin_20.arm64.tbz2
          tar -xzf libtextstyle-0.21_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/ncurses/ncurses-6.3_0.darwin_20.arm64.tbz2
          tar -xzf ncurses-6.3_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/libffi/libffi-3.4.2_2.darwin_20.arm64.tbz2
          tar -xzf libffi-3.4.2_2.darwin_20.arm64.tbz2
          wget https://packages.macports.org/pcre/pcre-8.45_0.darwin_20.arm64.tbz2
          tar -xzf pcre-8.45_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/bzip2/bzip2-1.0.8_0.darwin_20.arm64.tbz2
          tar -xzf bzip2-1.0.8_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/libedit/libedit-20210910-3.1_1.darwin_20.arm64.tbz2
          tar -xzf libedit-20210910-3.1_1.darwin_20.arm64.tbz2
          wget https://packages.macports.org/zlib/zlib-1.2.11_0.darwin_20.arm64.tbz2
          tar -xzf zlib-1.2.11_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/python39/python39-3.9.9_0+lto+optimizations.darwin_20.arm64.tbz2
          tar -xzf python39-3.9.9_0+lto+optimizations.darwin_20.arm64.tbz2
          wget https://packages.macports.org/openssl/openssl-3_2.darwin_20.arm64.tbz2
          tar -xzf openssl-3_2.darwin_20.arm64.tbz2
          wget https://packages.macports.org/openssl3/openssl3-3.0.1_0+legacy.darwin_20.arm64.tbz2
          tar -xzf openssl3-3.0.1_0+legacy.darwin_20.arm64.tbz2
          wget https://packages.macports.org/python3_select/python3_select-0.0_2.darwin_20.noarch.tbz2
          tar -xzf python3_select-0.0_2.darwin_20.noarch.tbz2
          wget https://packages.macports.org/python_select/python_select-0.3_9.darwin_20.noarch.tbz2
          tar -xzf python_select-0.3_9.darwin_20.noarch.tbz2
          wget https://packages.macports.org/sqlite3/sqlite3-3.37.0_0.darwin_20.arm64.tbz2
          tar -xzf sqlite3-3.37.0_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xz/xz-5.2.5_0.darwin_20.arm64.tbz2
          tar -xzf xz-5.2.5_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/gobject-introspection/gobject-introspection-1.60.2_7.darwin_20.arm64.tbz2
          tar -xzf gobject-introspection-1.60.2_7.darwin_20.arm64.tbz2
          wget https://packages.macports.org/cairo/cairo-1.17.4_0+quartz+x11.darwin_20.arm64.tbz2
          tar -xzf cairo-1.17.4_0+quartz+x11.darwin_20.arm64.tbz2
          wget https://packages.macports.org/fontconfig/fontconfig-2.13.1_1.darwin_20.arm64.tbz2
          tar -xzf fontconfig-2.13.1_1.darwin_20.arm64.tbz2
          wget https://packages.macports.org/freetype/freetype-2.11.1_0.darwin_20.arm64.tbz2
          tar -xzf freetype-2.11.1_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/brotli/brotli-1.0.9_2.darwin_20.arm64.tbz2
          tar -xzf brotli-1.0.9_2.darwin_20.arm64.tbz2
          wget https://packages.macports.org/libpng/libpng-1.6.37_0.darwin_20.arm64.tbz2
          tar -xzf libpng-1.6.37_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/ossp-uuid/ossp-uuid-1.6.2_12+perl5_28.darwin_20.arm64.tbz2
          tar -xzf ossp-uuid-1.6.2_12+perl5_28.darwin_20.arm64.tbz2
          wget https://packages.macports.org/perl5.28/perl5.28-5.28.3_4.darwin_20.arm64.tbz2
          tar -xzf perl5.28-5.28.3_4.darwin_20.arm64.tbz2
          wget https://packages.macports.org/db48/db48-4.8.30_4.darwin_20.arm64.tbz2
          tar -xzf db48-4.8.30_4.darwin_20.arm64.tbz2
          wget https://packages.macports.org/gdbm/gdbm-1.22_0.darwin_20.arm64.tbz2
          tar -xzf gdbm-1.22_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/readline/readline-8.1.000_0.darwin_20.arm64.tbz2
          tar -xzf readline-8.1.000_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/pkgconfig/pkgconfig-0.29.2_0.darwin_20.x86_64.tbz2
          tar -xzf pkgconfig-0.29.2_0.darwin_20.x86_64.tbz2
          wget https://packages.macports.org/libpixman/libpixman-0.38.4_0.darwin_20.arm64.tbz2
          tar -xzf libpixman-0.38.4_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libXext/xorg-libXext-1.3.4_0.darwin_20.arm64.tbz2
          tar -xzf xorg-libXext-1.3.4_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libX11/xorg-libX11-1.7.3.1_0.darwin_20.arm64.tbz2
          tar -xzf xorg-libX11-1.7.3.1_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libXau/xorg-libXau-1.0.9_0.darwin_20.arm64.tbz2
          tar -xzf xorg-libXau-1.0.9_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-xorgproto/xorg-xorgproto-2021.5_0.darwin_20.noarch.tbz2
          tar -xzf xorg-xorgproto-2021.5_0.darwin_20.noarch.tbz2
          wget https://packages.macports.org/xorg-libXdmcp/xorg-libXdmcp-1.1.3_0.darwin_20.arm64.tbz2
          tar -xzf xorg-libXdmcp-1.1.3_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libxcb/xorg-libxcb-1.14_0+python39.darwin_20.arm64.tbz2
          tar -xzf xorg-libxcb-1.14_0+python39.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libpthread-stubs/xorg-libpthread-stubs-0.4_0.darwin_20.noarch.tbz2
          tar -xzf xorg-libpthread-stubs-0.4_0.darwin_20.noarch.tbz2
          wget https://packages.macports.org/xorg-xcb-proto/xorg-xcb-proto-1.14.1_0+python39.darwin_20.noarch.tbz2
          tar -xzf xorg-xcb-proto-1.14.1_0+python39.darwin_20.noarch.tbz2
          wget https://packages.macports.org/libxml2/libxml2-2.9.12_1.darwin_20.arm64.tbz2
          tar -xzf libxml2-2.9.12_1.darwin_20.arm64.tbz2
          wget https://packages.macports.org/icu/icu-69.1_0.darwin_20.arm64.tbz2
          tar -xzf icu-69.1_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-xcb-util/xorg-xcb-util-0.4.0_1.darwin_20.arm64.tbz2
          tar -xzf xorg-xcb-util-0.4.0_1.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xrender/xrender-0.9.10_1.darwin_20.arm64.tbz2
          tar -xzf xrender-0.9.10_1.darwin_20.arm64.tbz2
          wget https://packages.macports.org/libtool/libtool-2.4.6_13.darwin_20.arm64.tbz2
          tar -xzf libtool-2.4.6_13.darwin_20.arm64.tbz2
          wget https://packages.macports.org/py39-mako/py39-mako-1.1.6_0.darwin_20.noarch.tbz2
          tar -xzf py39-mako-1.1.6_0.darwin_20.noarch.tbz2
          wget https://packages.macports.org/py39-beaker/py39-beaker-1.11.0_0.darwin_20.noarch.tbz2
          tar -xzf py39-beaker-1.11.0_0.darwin_20.noarch.tbz2
          wget https://packages.macports.org/py39-setuptools/py39-setuptools-59.6.0_0.darwin_20.noarch.tbz2
          tar -xzf py39-setuptools-59.6.0_0.darwin_20.noarch.tbz2
          wget https://packages.macports.org/py39-markupsafe/py39-markupsafe-2.0.1_0.darwin_20.arm64.tbz2
          tar -xzf py39-markupsafe-2.0.1_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/py39-markdown/py39-markdown-3.3.6_0.darwin_20.noarch.tbz2
          tar -xzf py39-markdown-3.3.6_0.darwin_20.noarch.tbz2
          wget https://packages.macports.org/xorg-libXi/xorg-libXi-1.7.10_0.darwin_20.arm64.tbz2
          tar -xzf xorg-libXi-1.7.10_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libXfixes/xorg-libXfixes-6.0.0_0.darwin_20.arm64.tbz2
          tar -xzf xorg-libXfixes-6.0.0_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libXtst/xorg-libXtst-1.2.3_1.darwin_20.arm64.tbz2
          tar -xzf xorg-libXtst-1.2.3_1.darwin_20.arm64.tbz2
          wget https://packages.macports.org/atk/atk-2.36.0_2.darwin_20.arm64.tbz2
          tar -xzf atk-2.36.0_2.darwin_20.arm64.tbz2
          wget https://packages.macports.org/gdk-pixbuf2/gdk-pixbuf2-2.42.2_2+x11.darwin_20.arm64.tbz2
          tar -xzf gdk-pixbuf2-2.42.2_2+x11.darwin_20.arm64.tbz2
          wget https://packages.macports.org/jasper/jasper-2.0.33_0.darwin_20.arm64.tbz2
          tar -xzf jasper-2.0.33_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/libjpeg-turbo/libjpeg-turbo-2.1.2_0.darwin_20.arm64.tbz2
          tar -xzf libjpeg-turbo-2.1.2_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/shared-mime-info/shared-mime-info-2.1_0.darwin_20.arm64.tbz2
          tar -xzf shared-mime-info-2.1_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/tiff/tiff-4.3.0_0.darwin_20.arm64.tbz2
          tar -xzf tiff-4.3.0_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/zstd/zstd-1.5.1_0.darwin_20.arm64.tbz2
          tar -xzf zstd-1.5.1_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/lz4/lz4-1.9.3_1.darwin_20.arm64.tbz2
          tar -xzf lz4-1.9.3_1.darwin_20.arm64.tbz2
          wget https://packages.macports.org/hicolor-icon-theme/hicolor-icon-theme-0.17_0.darwin_20.noarch.tbz2
          tar -xzf hicolor-icon-theme-0.17_0.darwin_20.noarch.tbz2
          #wget https://packages.macports.org/libepoxy/libepoxy-1.5.4_2+python39.darwin_20.arm64.tbz2
          #tar -xzf libepoxy-1.5.4_2+python39.darwin_20.arm64.tbz2
          wget https://packages.macports.org/mesa/mesa-19.0.8_1+osmesa+python27.darwin_20.arm64.tbz2
          tar -xzf mesa-19.0.8_1+osmesa+python27.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libXdamage/xorg-libXdamage-1.1.5_0.darwin_20.arm64.tbz2
          tar -xzf xorg-libXdamage-1.1.5_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libXmu/xorg-libXmu-1.1.3_0.darwin_20.arm64.tbz2
          tar -xzf xorg-libXmu-1.1.3_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libXt/xorg-libXt-1.2.1_0.darwin_20.arm64.tbz2
          tar -xzf xorg-libXt-1.2.1_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libsm/xorg-libsm-1.2.3_0.darwin_20.arm64.tbz2
          tar -xzf xorg-libsm-1.2.3_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libice/xorg-libice-1.0.10_0.darwin_20.arm64.tbz2
          tar -xzf xorg-libice-1.0.10_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libXxf86vm/xorg-libXxf86vm-1.1.4_1.darwin_20.arm64.tbz2
          tar -xzf xorg-libXxf86vm-1.1.4_1.darwin_20.arm64.tbz2
          wget https://packages.macports.org/pango/pango-1.48.10_0+quartz+x11.darwin_20.arm64.tbz2
          tar -xzf pango-1.48.10_0+quartz+x11.darwin_20.arm64.tbz2
          wget https://packages.macports.org/Xft2/Xft2-2.3.4_0.darwin_20.arm64.tbz2
          tar -xzf Xft2-2.3.4_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/fribidi/fribidi-1.0.11_0.darwin_20.arm64.tbz2
          tar -xzf fribidi-1.0.11_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/harfbuzz/harfbuzz-2.9.0_0.darwin_20.arm64.tbz2
          tar -xzf harfbuzz-2.9.0_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/graphite2/graphite2-1.3.13_1.darwin_20.arm64.tbz2
          tar -xzf graphite2-1.3.13_1.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libXcomposite/xorg-libXcomposite-0.4.5_0.darwin_20.arm64.tbz2
          tar -xzf xorg-libXcomposite-0.4.5_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libXcursor/xorg-libXcursor-1.2.0_0.darwin_20.arm64.tbz2
          tar -xzf xorg-libXcursor-1.2.0_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libXinerama/xorg-libXinerama-1.1.4_1.darwin_20.arm64.tbz2
          tar -xzf xorg-libXinerama-1.1.4_1.darwin_20.arm64.tbz2
          wget https://packages.macports.org/xorg-libXrandr/xorg-libXrandr-1.5.2_0.darwin_20.arm64.tbz2
          tar -xzf xorg-libXrandr-1.5.2_0.darwin_20.arm64.tbz2
          wget https://packages.macports.org/gtk3-devel/gtk3-devel-3.24.30_1+x11.darwin_20.arm64.tbz2
          tar -xzf gtk3-devel-3.24.30_1+x11.darwin_20.arm64.tbz2
      - name: Macports 2
        shell: bash
        if: steps.cache-sysroot.outputs.cache-hit != 'true'
        run: |
          sudo cp -R -H opt/local/* /opt/local/
          ls -l opt/local/lib/
          echo '###################'
          sudo ln -s opt/local/lib/libiconv.2.dylib /usr/local/lib/libiconv.2.dylib
          sudo ln -s opt/local/lib/libiconv.a /usr/local/lib/libiconv.a
          #sudo ln -s opt/local/include/libiconv* /usr/local/include/ 2>/dev/null
          #sudo ln -s opt/local/share/libiconv* /usr/local/share/ 2>/dev/null
          #sudo ln -s opt/local/libexec/libiconv* /usr/local/libexec/ 2>/dev/null
          #sudo ln -s opt/local/var/libiconv* /usr/local/var/ 2>/dev/null
          echo ':::::::::::::::::::::'
          ls -l /usr/local/lib
          echo ':::::::::::::::::::::'

          /opt/local/bin/pkg-config --list-all
          sudo chmod -R 0777 /opt/
          sudo chown -R runner /opt/

          ls -l /opt/local/include/ | grep iconv

          echo '::::::::::::::::::::::pkg-config version'
          /usr/local/bin/pkg-config --version
          /opt/local/bin/pkg-config --version
          echo '/usr/local/bin/pkg-config --atleast-pkgconfig-version 0.9.0'
          #/usr/local/bin/pkg-config --atleast-pkgconfig-version 0.9.0

          #sudo rm -rf /usr/local/bin/pkg-config
          export PATH="/opt/local/bin:$PATH" 

          echo '::::::::::::::::::::::pkg-config'
          which pkg-config
          echo 'pkg-config --modversion iconv'
          pkg-config --modversion iconv
          echo 'pkg-config --libs iconv'
          pkg-config --libs iconv
          echo 'pkg-config --exists iconv'
          pkg-config --exists iconv
          echo 'pkg-config --exists --print-errors iconv'
          pkg-config --exists --print-errors iconv

          echo '::::::::::::::::::::::::::::::::::::::'
          cat opt/local/lib/pkgconfig/iconv.pc
          cat opt/local/lib/pkgconfig/glib-2.0.pc
          cat opt/local/lib/pkgconfig/expat.pc
      - name: Build Sysroot
        shell: bash
        if: steps.cache-sysroot.outputs.cache-hit != 'true'
        run: |
          brew uninstall cmake
          brew install bison nasm make meson
          rm -f /usr/local/lib/pkgconfig/*.pc
          ./scripts/build_dependencies.sh -p ${{ matrix.platform }} -a ${{ matrix.arch }}
      - name: Compress Sysroot
        if: steps.cache-sysroot.outputs.cache-hit != 'true' || github.event_name == 'release' || github.event.inputs.test_release == 'true'
        run: tar cf sysroot.tgz sysroot*
      - name: Upload Sysroot
        if: steps.cache-sysroot.outputs.cache-hit != 'true' || github.event_name == 'release' || github.event.inputs.test_release == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: Sysroot-${{ matrix.platform }}-${{ matrix.arch }}
          path: sysroot.tgz
  
  build-qemu-linux:
    if: false
    name: Build Qemu linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm64, x86_64]
        platform: [linux]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache Sysroot
        id: cache-sysroot
        uses: actions/cache@v2
        with:
          path: sysroot-${{ matrix.platform }}-${{ matrix.arch }}
          key: ${{ matrix.platform }}-${{ matrix.arch }}-${{ hashFiles('scripts/build_dependencies.sh') }}-${{ hashFiles('patches/**') }}
      - name: Setup Path
        shell: bash
        run: |
          echo "/usr/local/opt/gettext/bin" >> $GITHUB_PATH
          echo "/usr/local/opt/bison/bin" >> $GITHUB_PATH
      - name: Build Sysroot
        shell: bash
        if: steps.cache-sysroot.outputs.cache-hit != 'true'
        run: |
          sudo apt-get remove -y cmake
          sudo apt-get install -y bison pkg-config nasm make meson gettext libgpg-error-dev
          rm -f /usr/local/lib/pkgconfig/*.pc
          bash ./scripts/build_dependencies.sh -p ${{ matrix.platform }} -a ${{ matrix.arch }}
      - name: Compress Sysroot
        if: steps.cache-sysroot.outputs.cache-hit != 'true' || github.event_name == 'release' || github.event.inputs.test_release == 'true'
        run: tar cf sysroot.tgz sysroot*
      - name: Upload Sysroot
        if: steps.cache-sysroot.outputs.cache-hit != 'true' || github.event_name == 'release' || github.event.inputs.test_release == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: Sysroot-${{ matrix.platform }}-${{ matrix.arch }}
          path: sysroot.tgz