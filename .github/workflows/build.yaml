name: Build
on:
  push:
    branches:
      - 'master'

jobs:
  build-qemu-macos:
    name: Build Qemu macos
    runs-on: macos-11
    strategy:
      matrix:
        arch: [arm64]
        platform: [macos]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup Xcode
        shell: bash
        run: sudo xcode-select -switch /Applications/Xcode_13.1.app
      - name: Cache Sysroot
        id: cache-sysroot
        uses: actions/cache@v2
        with:
          path: sysroot-${{ matrix.platform }}-${{ matrix.arch }}
          key: ${{ matrix.platform }}-${{ matrix.arch }}-${{ hashFiles('scripts/build_dependencies.sh') }}-${{ hashFiles('patches/**') }}
      - name: Setup Path
        shell: bash
        run: |
          echo "/usr/local/opt/gettext/bin" >> $GITHUB_PATH
          echo "/usr/local/opt/bison/bin" >> $GITHUB_PATH
      - name: Macports 0
        if: steps.cache-sysroot.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/macports/macports-base/releases/download/v2.7.1/MacPorts-2.7.1-11-BigSur.pkg
          sudo installer -pkg ./MacPorts-2.7.1-11-BigSur.pkg -target / 
      
      - name: Macports 1
        if: steps.cache-sysroot.outputs.cache-hit != 'true'
        run: |
          sudo chmod 0777 /opt/local/etc/macports/macports.conf
          echo 'build_arch arm64' >> /opt/local/etc/macports/macports.conf
          sudo /opt/local/bin/port -v selfupdate
          sudo /opt/local/bin/port upgrade outdated
          sudo /opt/local/bin/port info fontconfig
          sudo /opt/local/bin/port install fontconfig
        
          #wget https://packages.macports.org/fontconfig/fontconfig-2.13.1_1.darwin_21.arm64.tbz2
          #tar -xzf fontconfig-2.13.1_1.darwin_21.arm64.tbz2
          #sudo chmod -R 0777 /opt/
          #sudo cp -R -H opt/local/* /opt/local/
      
      - name: Macports 2
        if: steps.cache-sysroot.outputs.cache-hit != 'true'
        run: |
          sudo /opt/local/bin/port install gtk3-devel
      - name: Build Sysroot
        shell: bash
        if: steps.cache-sysroot.outputs.cache-hit != 'true'
        run: |
          brew uninstall cmake
          brew install bison pkg-config nasm make meson
          rm -f /usr/local/lib/pkgconfig/*.pc
          ./scripts/build_dependencies.sh -p ${{ matrix.platform }} -a ${{ matrix.arch }}
      - name: Compress Sysroot
        if: steps.cache-sysroot.outputs.cache-hit != 'true' || github.event_name == 'release' || github.event.inputs.test_release == 'true'
        run: tar cf sysroot.tgz sysroot*
      - name: Upload Sysroot
        if: steps.cache-sysroot.outputs.cache-hit != 'true' || github.event_name == 'release' || github.event.inputs.test_release == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: Sysroot-${{ matrix.platform }}-${{ matrix.arch }}
          path: sysroot.tgz
  
  build-qemu-linux:
    name: Build Qemu linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm64, x86_64]
        platform: [linux]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache Sysroot
        id: cache-sysroot
        uses: actions/cache@v2
        with:
          path: sysroot-${{ matrix.platform }}-${{ matrix.arch }}
          key: ${{ matrix.platform }}-${{ matrix.arch }}-${{ hashFiles('scripts/build_dependencies.sh') }}-${{ hashFiles('patches/**') }}
      - name: Setup Path
        shell: bash
        run: |
          echo "/usr/local/opt/gettext/bin" >> $GITHUB_PATH
          echo "/usr/local/opt/bison/bin" >> $GITHUB_PATH
      - name: Build Sysroot
        shell: bash
        if: steps.cache-sysroot.outputs.cache-hit != 'true'
        run: |
          sudo apt-get remove -y cmake
          sudo apt-get install -y bison pkg-config nasm make meson gettext libgpg-error-dev
          rm -f /usr/local/lib/pkgconfig/*.pc
          bash ./scripts/build_dependencies.sh -p ${{ matrix.platform }} -a ${{ matrix.arch }}
      - name: Compress Sysroot
        if: steps.cache-sysroot.outputs.cache-hit != 'true' || github.event_name == 'release' || github.event.inputs.test_release == 'true'
        run: tar cf sysroot.tgz sysroot*
      - name: Upload Sysroot
        if: steps.cache-sysroot.outputs.cache-hit != 'true' || github.event_name == 'release' || github.event.inputs.test_release == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: Sysroot-${{ matrix.platform }}-${{ matrix.arch }}
          path: sysroot.tgz